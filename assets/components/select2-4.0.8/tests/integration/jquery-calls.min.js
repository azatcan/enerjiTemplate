module("select2(val)");var Utils=require("select2/utils");test("multiple elements with arguments works",function(b){var e=require("jquery");require("jquery.select2");var d=e("<select><option>1</option><option>2</option></select>");var c=d.clone();var a=d.add(c);a.select2();a.select2("val","2");b.equal(d.val(),"2","The call should change the value on the first element");b.equal(c.val(),"2","The call should also change the value on the second element")});test("initializes when jQuery $.data contains cyclic reference",function(a){var d=require("jquery");require("jquery.select2");var b=d('<select><option>One</option><option>Two</option><option value="3" selected>Three</option></select>');var c={};c.same=c;b.data("same",c);b.select2();a.equal(b.val(),"3","The option value should be pulled correctly")});test("$element.data returns instance and options correctly",function(a){var d=require("jquery");require("jquery.select2");var b=d('<select><option value="1">One</option><option value="2">Two</option><option value="3" selected>Three</option></select>');b.select2({maximumSelectionLength:2,multiple:true});a.equal(b.val(),"3","Only 1 option should be pulled.");var c=b.data("select2");a.ok(c);a.ok(c.options);a.equal(c,Utils.GetData(c.$element[0],"select2"));a.equal(c.options.options.maximumSelectionLength,2)});