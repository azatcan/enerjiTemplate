module("Decorators");var Utils=require("select2/utils");test("overridden - method",function(g){function j(){}j.prototype.hello=function(){return"A"};function i(){}i.prototype.hello=function(){return"B"};var f=Utils.Decorate(j,i);var h=new f();g.strictEqual(h.hello(),"B")});test("overridden - constructor",function(g){function j(){this.inherited=true}j.prototype.hello=function(){return"A"};function i(a){this.called=true}i.prototype.other=function(){return"B"};var f=Utils.Decorate(j,i);var h=new f();g.ok(h.called);g.ok(!h.inherited)});test("not overridden - method",function(g){function j(){}j.prototype.hello=function(){return"A"};function i(){}i.prototype.other=function(){return"B"};var f=Utils.Decorate(j,i);var h=new f();g.strictEqual(h.hello(),"A")});test("not overridden - constructor",function(g){function j(){this.called=true}j.prototype.hello=function(){return"A"};function i(){}i.prototype.other=function(){return"B"};var f=Utils.Decorate(j,i);var h=new f();g.ok(h.called)});test("inherited - method",function(g){function j(){}j.prototype.hello=function(){return"A"};function i(a){}i.prototype.hello=function(a){return"B"+a.call(this)+"C"};var f=Utils.Decorate(j,i);var h=new f();g.strictEqual(h.hello(),"BAC")});test("inherited - constructor",function(g){function j(){this.inherited=true}j.prototype.hello=function(){return"A"};function i(a){this.called=true;a.call(this)}i.prototype.other=function(){return"B"};var f=Utils.Decorate(j,i);var h=new f();g.ok(h.called);g.ok(h.inherited)});test("inherited - three levels",function(i){function l(a){this.baseCalled=true;this.baseTestArgument=a}l.prototype.test=function(a){return a+"c"};function m(b,a){this.middleCalled=true;this.middleTestArgument=a;b.call(this,a)}m.prototype.test=function(a,b){return a.call(this,b+"b")};function k(b,a){this.decoratorCalled=true;this.decoratorTestArgument=a;b.call(this,a)}k.prototype.test=function(a,b){return a.call(this,b+"a")};var h=Utils.Decorate(Utils.Decorate(l,m),k);var j=new h("test");i.ok(j.baseCalled,"The base class contructor was called");i.ok(j.middleCalled,"The middle class constructor was called");i.ok(j.decoratorCalled,"The decorator constructor was called");i.strictEqual(j.baseTestArgument,"test");i.strictEqual(j.middleTestArgument,"test");i.strictEqual(j.decoratorTestArgument,"test");var n=j.test("test");i.strictEqual(n,"testabc")});